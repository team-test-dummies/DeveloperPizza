-- create users table
create table users (
	id serial primary key,
	accountType varchar(200) not null, 		-- employer, developer
	accountName varchar(200) not null,		-- fName_lName
	username varchar(200) unique not null,	-- username
	password varchar(200) not null,			-- password
	phoneNumber varchar(200) not null,		-- XXX-XXX-XXXX
	email varchar(200) unique not null,		-- email@domain.com
	location varchar(200) not null	        -- state
);

-- populate users DB
-- all passwords are derived in the HashUtility using username and 'guest' as password
insert into users (accountType, accountName, username, password, phoneNumber, email, location)
	values
	('CUSTOMER', 'madison_kora', 'madkor436', 'kï¿½5ï¿½Oï¿½ï¿½ï¿½Dï¿½a=ï¿½zï¿½ï¿½kl\qï¿½Iï¿½ï¿½ï¿½ï¿½xï¿½ï¿½', '505-684-9399', 'madkor436@company.net', 'New Mexico'),
	('CUSTOMER', 'cole_thomas', 'coltho251', 'ï¿½ï¿½(^Oyï¿½ï¿½ï¿½mï¿½ï¿½Ì’ï¿½ï¿½ï¿½ï¿½Â‡Uï¿½C+ï¿½', '240-971-2293', 'coltho251@company.net', 'Maryland'),
	('STAFF', 'emmett_carter', 'masterprogrammer', 'ï¿½!v(Cï¿½ï¿½4ï¿½ï¿½}ï¿½ï¿½~Hï¿½ï¿½Ø²wï¿½ï¿½6sï¿½Hï¿½fjï¿½ï¿½', '334-420-6778', 'programmerGod@hotmail.com', 'Alabama'),
	('CUSTOMER', 'lukas_torres',  'luktor945', 'ï¿½ï¿½>YvÑ›os!#ï¿½ï¿½Bï¿½rï¿½ï¿½4ï¿½ï¿½ï¿½', '239-502-1517', 'luktor945@company.net', 'Flordia'),
	('STAFF', 'ashley_walker', 'boatsinker', 'ï¿½pdï¿½nï¿½ï¿½ï¿½Fï¿½W$ï¿½X.ï¿½ï¿½fT[Wï¿½ï¿½Sï¿½Gï¿½4', '505-887-3737', 'ashwalker84@gmail.com', 'New Mexico'),
	('STAFF', 'developer', 'developer', 'Â„ï¿½tï¿½ï¿½Kï¿½1ï¿½-:pfï¿½bï¿½ï¿½ï¿½NÞ…ï¿½ï¿½xï¿½', '000-000-0000', 'developer@example.com', 'New Mexico'),
	('CUSTOMER', 'employer', 'employer', 'ï¿½lQBï¿½Iï¿½Ë­3yï¿½Gï¿½YNdï¿½ï¿½v C''SOnï¿½!R', '000-000-0000', 'employer@example.com', 'New Mexico'),
	('CUSTOMER', 'Rick Monald''s', 'rickmonald', '{^ï¿½ï¿½ï¿½:ï¿½ï¿½ï¿½ï¿½Ñª#Mp{ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Fï¿½ï¿½y-Q', '000-867-5309', 'rick@rickmonalds.com', 'Minnesota'),
	('CUSTOMER', 'Half Food''s', 'halffoods', 'dy|6)Amï¿½"vmï¿½ï¿½Gï¿½Oï¿½ï¿½#ï¿½SzY ï¿½ï¿½dï¿½', '000-111-1111', 'half@halffoods.com', 'Minnesota'),
	('STAFF', 'staff', 'staff', 'ï¿½hQ8Ì£Kwï¿½ï¿½ï¿½ï¿½ï¿½Yï¿½sPï¿½ï¿½oV}ï¿½1Jï¿½ï¿½', '000-000-0000', 'staff@example.com', 'Minnesota'),
	('ADMIN', 'admin', 'admin', '
ï¿½bnï¿½ï¿½2ï¿½ï¿½ï¿½,''ï¿½ï¿½<Uï¿½ï¿½KGï¿½&ï¿½,(?ï¿½', '000-000-0000', 'adminf@example.com', 'Minnesota');

create table languages (
    id serial primary key,
    language varchar(200) not null unique
);

-- populate languages table
INSERT into languages (language)
    VALUES
    ('Java'),
    ('CSS'),
    ('HTML'),
    ('Javascript'),
    ('C'),
    ('C++'),
    ('COBOL'),
    ('Python'),
    ('SQL'),
    ('Rust'),
    ('Perl'),
    ('Go');

create table tools (
    id serial primary key,
    tool varchar(200) not null unique
);

-- populate tool table
INSERT into tools (tool)
    VALUES
    ('Visual Studio Code'),
    ('IntelliJ'),
    ('Selenium'),
    ('Javalin'),
    ('Windows'),
    ('Linux'),
    ('GCP'),
    ('AWS');

CREATE TYPE education AS ENUM ('NONE', 'HIGHSCHOOL', 'ASSOCIATES', 'BACHELORS', 'MASTERS');

CREATE TABLE orders (
	id SERIAL PRIMARY KEY,
	user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
	name VARCHAR(200) NOT NULL,
	salary INTEGER NOT NULL CHECK(salary > 0),
	education_requirement education NOT NULL DEFAULT 'NONE',
	closed BOOLEAN NOT NULL DEFAULT FALSE
);

INSERT INTO orders (user_id, name, salary, education_requirement)
	VALUES
	(8, 'science person', 40000, 'BACHELORS'), -- Rick Monald's
	(8, 'computer science person', 50000, 'ASSOCIATES'),
	(8, 'person', 60000, 'ASSOCIATES'),
	(9, 'math person', 70000, 'NONE'), -- Half Food's
	(9, 'math person', 70000, 'NONE');

CREATE TABLE orders_languages (
	order_id INTEGER REFERENCES orders(id) ON DELETE CASCADE,
	language_id INTEGER REFERENCES languages(id),
	PRIMARY KEY(order_id, language_id)
);

INSERT INTO orders_languages (order_id, language_id)
	VALUES
	(1, 1), -- Rick Monald's has three orders with various languages
	(1, 2),
	(1, 3),
	(2, 3),
	(2, 4),
	(3, 3),
	(3, 4),
	(4, 5), -- Half Food's wants two developers who know the same language
	(5, 5);

CREATE TABLE orders_tools (
	order_id INTEGER REFERENCES orders(id) ON DELETE CASCADE,
	tool_id INTEGER REFERENCES tools(id),
	PRIMARY KEY(order_id, tool_id)
);

INSERT INTO orders_tools (order_id, tool_id)
	VALUES
	(1, 1), -- Rick Monald's has three orders with various tools
	(1, 2),
	(1, 3),
	(2, 3),
	(2, 4),
	(3, 3),
	(3, 4),
	(4, 5), -- Half Food's wants two developers who know the same tool
	(5, 5);

create table premades (
    id serial primary key,
    premade varchar(200) not null unique
);

-- populate tool table
INSERT into premades (premade)
    VALUES
    ('Full Stack Developer'),
    ('Front End Developer'),
    ('Back End Developer'),
    ('Test Automation Engineer'),
    ('Cybersecurity Specialist'),
    ('DevOps Engineer');

create table premades_languages (
	id serial primary key,
	premade_id integer REFERENCES premades(id),
	language_id integer REFERENCES languages(id)
);

-- attach premades to languages
INSERT into premades_languages (premade_id, language_id)
	VALUES
	(1, 1), -- fullstack web developer
	(1, 2),
	(1, 3),
	(1, 4),
	(1, 9),
	(1, 11),
	(2, 2), -- frontend web developer
	(2, 3),
	(2, 4),
	(3, 1), -- backend developer
	(3, 9),
	(4, 1), -- test automation engineer
	(4, 9),
	(5, 1), -- cypersecurity specialist
	(5, 4),
	(5, 5),
	(5, 6),
	(5, 9),
	(5, 10),
	(6, 1), -- DevOps Engineer
	(6, 8),
	(6, 9),
	(6, 12);

create table premades_tools (
  id serial primary key,
  premade_id integer REFERENCES premades(id),
  tool_id integer REFERENCES tools(id)
);

-- attach premades to tools
INSERT into premades_tools (premade_id, tool_id)
	VALUES
	(1, 1), -- fullstack web developer
	(1, 2),
	(1, 3),
	(1, 4),
	(1, 5),
	(1, 7),
	(1, 8),
	(2, 1), -- frontend web developer
	(2, 7),
	(2, 8),
	(3, 2), -- backend developer
	(3, 5),
	(3, 6),
	(4, 2), -- test automation engineer
	(4, 3),
	(5, 2), -- cybersecurity specialist
	(5, 5),
	(5, 6),
	(6, 7), -- DevOps Engineer
	(6, 8);